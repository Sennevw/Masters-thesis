{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b2a03fa2",
   "metadata": {},
   "outputs": [],
   "source": [
    "text = [\"1\", \"2\", \"3\"]\n",
    "print(int(text))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7531b42f",
   "metadata": {},
   "outputs": [],
   "source": [
    "text = np.array([\"1\", \"2\", \"3\"])\n",
    "print(int(text))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c892296b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from subprocess import call\n",
    "from sklearn.cluster import OPTICS, cluster_optics_dbscan\n",
    "from mpl_toolkits.mplot3d import Axes3D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "febc828b",
   "metadata": {},
   "outputs": [],
   "source": [
    "text = np.array([\"1\", \"2\", \"3\"])\n",
    "print(int(text))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ad453b0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines())\n",
    "ndim = int(data.readlines())\n",
    "time = int(data.readlines())\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos = [int(y) for y in for x.split() in pos]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "30f53058",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines())\n",
    "ndim = int(data.readlines())\n",
    "time = int(data.readlines())\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x.split() in pos:\n",
    "    y = [float(x) for x in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x.split() in vel:\n",
    "    y = [float(x) for x in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b346a986",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines())\n",
    "ndim = int(data.readlines())\n",
    "time = int(data.readlines())\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9101719f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines())\n",
    "ndim = int(data.readlines().split()[0])\n",
    "time = int(data.readlines().split()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "39708aeb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines().split()[0])\n",
    "ndim = int(data.readlines().split()[0])\n",
    "time = int(data.readlines().split()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5cf00c88",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines()[0])\n",
    "ndim = int(data.readlines()[0])\n",
    "time = int(data.readlines().[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8936053b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines()[0])\n",
    "ndim = int(data.readlines()[0])\n",
    "time = int(data.readlines()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "212ca664",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines()[0])\n",
    "print(particles)\n",
    "ndim = int(data.readlines()[0])\n",
    "time = int(data.readlines()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "abe0bdaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines()[0])\n",
    "print(particles)\n",
    "ndim = int(data.readlines()[0])\n",
    "print(ndim)\n",
    "time = int(data.readlines()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b1288a61",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines()[0])\n",
    "print(particles)\n",
    "print(data.readlines()[0])\n",
    "ndim = int(data.readlines()[0])\n",
    "time = float(data.readlines()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "36017f85",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readlines()[0])\n",
    "print(particles)\n",
    "print(data.readlines())\n",
    "ndim = int(data.readlines()[0])\n",
    "time = float(data.readlines()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "8f2d8e63",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readline()[0])\n",
    "print(particles)\n",
    "print(data.readline())\n",
    "ndim = int(data.readline()[0])\n",
    "time = float(data.readline()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "bd45e841",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readline())\n",
    "print(particles)\n",
    "print(data.readline())\n",
    "ndim = int(data.readline()[0])\n",
    "time = float(data.readline()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ef34dc22",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "print(data.readline())\n",
    "particles = int(data.readline())\n",
    "print(particles)\n",
    "print(data.readline())\n",
    "ndim = int(data.readline()[0])\n",
    "time = float(data.readline()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "23554ff9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "print(data.readline())\n",
    "particles = int(data.readline())\n",
    "ndim = int(data.readline()[0])\n",
    "time = float(data.readline()[0])\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "184bb3ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "print(data.readline())\n",
    "particles = int(data.readline())\n",
    "ndim = int(data.readline())\n",
    "time = float(data.readline())\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d285393f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "print(data.readline())\n",
    "particles = int(data.readline())\n",
    "print(data.readline())\n",
    "ndim = int(data.readline())\n",
    "time = float(data.readline())\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "684c6789",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readline())\n",
    "ndim = int(data.readline())\n",
    "time = float(data.readline())\n",
    "data = np.array([float(x) for x in data])\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5dc346db",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readline())\n",
    "ndim = int(data.readline())\n",
    "time = float(data.readline())\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "eb3f9172",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "data = open('data.txt', 'r')\n",
    "particles = int(data.readline())\n",
    "ndim = int(data.readline())\n",
    "time = float(data.readline())\n",
    "data = data.readlines()\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "data.close()\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "646ff984",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load data from file that looks like\n",
    "# Mass 1\n",
    "# Mass 2\n",
    "# ...\n",
    "# x1 y1 z1\n",
    "# x2 y2 z2\n",
    "# ...\n",
    "# vx1 vy1 vz1\n",
    "# vx2 vy2 vz2\n",
    "# ...\n",
    "\n",
    "file = open('data.txt', 'r')\n",
    "particles = int(file.readline())\n",
    "ndim = int(file.readline())\n",
    "time = float(file.readline())\n",
    "data = file.readlines()\n",
    "file.close()\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "88614ced",
   "metadata": {},
   "outputs": [],
   "source": [
    "%notebook matplotlib inline\n",
    "\n",
    "file = open('data.txt', 'r')\n",
    "particles = int(file.readline())\n",
    "ndim = int(file.readline())\n",
    "time = float(file.readline())\n",
    "data = file.readlines()\n",
    "file.close()\n",
    "masses = data[0:particles-1]\n",
    "pos = data[particles:particles*2-1]\n",
    "vel = data[particles*2:particles*3-1]\n",
    "masses = [float(x) for x in masses]\n",
    "pos1 = np.array([])\n",
    "for x in pos:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    pos1 = np.append(pos1, y)\n",
    "\n",
    "for x in vel:\n",
    "    y = [float(z) for z in x.split()]\n",
    "    vel = np.append(vel, y)\n",
    "\n",
    "#scatter positions in 3d plot\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.scatter(pos1[0::3], pos1[1::3], pos1[2::3], c='r', marker='o')\n",
    "ax.set_xlabel('X Label')\n",
    "ax.set_ylabel('Y Label')\n",
    "ax.set_zlabel('Z Label')\n",
    "plt.show()\n",
    "\n",
    "    "
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}
